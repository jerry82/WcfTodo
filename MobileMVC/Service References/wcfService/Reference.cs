//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MobileMVC.wcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MobileMVC.wcfService.RegisterResult))]
    public partial class LoginResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultString {
            get {
                return this.ResultStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultStringField, value) != true)) {
                    this.ResultStringField = value;
                    this.RaisePropertyChanged("ResultString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterResult", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Entity")]
    [System.SerializableAttribute()]
    public partial class RegisterResult : MobileMVC.wcfService.LoginResult {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceDataFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Entity")]
    [System.SerializableAttribute()]
    public partial class ServiceDataFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Issue {
            get {
                return this.IssueField;
            }
            set {
                if ((object.ReferenceEquals(this.IssueField, value) != true)) {
                    this.IssueField = value;
                    this.RaisePropertyChanged("Issue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Entity")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IconIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IconId {
            get {
                return this.IconIdField;
            }
            set {
                if ((this.IconIdField.Equals(value) != true)) {
                    this.IconIdField = value;
                    this.RaisePropertyChanged("IconId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskNum {
            get {
                return this.TaskNumField;
            }
            set {
                if ((this.TaskNumField.Equals(value) != true)) {
                    this.TaskNumField = value;
                    this.RaisePropertyChanged("TaskNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Entity")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CatId {
            get {
                return this.CatIdField;
            }
            set {
                if ((this.CatIdField.Equals(value) != true)) {
                    this.CatIdField = value;
                    this.RaisePropertyChanged("CatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CIcon", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Entity")]
    [System.SerializableAttribute()]
    public partial class CIcon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUri {
            get {
                return this.ImageUriField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUriField, value) != true)) {
                    this.ImageUriField = value;
                    this.RaisePropertyChanged("ImageUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wcfService.ITodoService")]
    public interface ITodoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Login", ReplyAction="http://tempuri.org/ITodoService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MobileMVC.wcfService.ServiceDataFault), Action="http://tempuri.org/ITodoService/LoginServiceDataFaultFault", Name="ServiceDataFault", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Entity")]
        MobileMVC.wcfService.LoginResult Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/Register", ReplyAction="http://tempuri.org/ITodoService/RegisterResponse")]
        MobileMVC.wcfService.RegisterResult Register(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/ChangePassword", ReplyAction="http://tempuri.org/ITodoService/ChangePasswordResponse")]
        bool ChangePassword(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetUserId", ReplyAction="http://tempuri.org/ITodoService/GetUserIdResponse")]
        long GetUserId(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetAllCategories", ReplyAction="http://tempuri.org/ITodoService/GetAllCategoriesResponse")]
        MobileMVC.wcfService.Category[] GetAllCategories(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetAllTasks", ReplyAction="http://tempuri.org/ITodoService/GetAllTasksResponse")]
        MobileMVC.wcfService.Task[] GetAllTasks(long catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/AddCategory", ReplyAction="http://tempuri.org/ITodoService/AddCategoryResponse")]
        bool AddCategory(MobileMVC.wcfService.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/RemoveCategory", ReplyAction="http://tempuri.org/ITodoService/RemoveCategoryResponse")]
        bool RemoveCategory(long catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/AddTask", ReplyAction="http://tempuri.org/ITodoService/AddTaskResponse")]
        MobileMVC.wcfService.Task AddTask(long catId, MobileMVC.wcfService.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/UpdateTask", ReplyAction="http://tempuri.org/ITodoService/UpdateTaskResponse")]
        void UpdateTask(MobileMVC.wcfService.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetTask", ReplyAction="http://tempuri.org/ITodoService/GetTaskResponse")]
        MobileMVC.wcfService.Task GetTask(long taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/RemoveTask", ReplyAction="http://tempuri.org/ITodoService/RemoveTaskResponse")]
        void RemoveTask(long taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITodoService/GetAllIcons", ReplyAction="http://tempuri.org/ITodoService/GetAllIconsResponse")]
        MobileMVC.wcfService.CIcon[] GetAllIcons();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITodoServiceChannel : MobileMVC.wcfService.ITodoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TodoServiceClient : System.ServiceModel.ClientBase<MobileMVC.wcfService.ITodoService>, MobileMVC.wcfService.ITodoService {
        
        public TodoServiceClient() {
        }
        
        public TodoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TodoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MobileMVC.wcfService.LoginResult Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public MobileMVC.wcfService.RegisterResult Register(string username, string password) {
            return base.Channel.Register(username, password);
        }
        
        public bool ChangePassword(string username, string password) {
            return base.Channel.ChangePassword(username, password);
        }
        
        public long GetUserId(string username) {
            return base.Channel.GetUserId(username);
        }
        
        public MobileMVC.wcfService.Category[] GetAllCategories(string username) {
            return base.Channel.GetAllCategories(username);
        }
        
        public MobileMVC.wcfService.Task[] GetAllTasks(long catId) {
            return base.Channel.GetAllTasks(catId);
        }
        
        public bool AddCategory(MobileMVC.wcfService.Category category) {
            return base.Channel.AddCategory(category);
        }
        
        public bool RemoveCategory(long catId) {
            return base.Channel.RemoveCategory(catId);
        }
        
        public MobileMVC.wcfService.Task AddTask(long catId, MobileMVC.wcfService.Task task) {
            return base.Channel.AddTask(catId, task);
        }
        
        public void UpdateTask(MobileMVC.wcfService.Task task) {
            base.Channel.UpdateTask(task);
        }
        
        public MobileMVC.wcfService.Task GetTask(long taskId) {
            return base.Channel.GetTask(taskId);
        }
        
        public void RemoveTask(long taskId) {
            base.Channel.RemoveTask(taskId);
        }
        
        public MobileMVC.wcfService.CIcon[] GetAllIcons() {
            return base.Channel.GetAllIcons();
        }
    }
}
